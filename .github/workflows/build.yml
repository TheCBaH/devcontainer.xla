name: build

on:
  push:
  pull_request:
  workflow_dispatch:
  schedule:
    - cron: 30 3 * * SAT

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: checkout
      uses: actions/checkout@v4
      with:
        submodules: true
    - name: cache
      run: |
        set -eux
        ${{ env.EXEC }} df -h
        df -h
        mkdir .cache
        if [ "$(stat --format %d /mnt)" != "$(stat --format %d .)" ]; then
          df -h /mnt
          sudo mkdir /mnt/.cache
          sudo chown ${USER} /mnt/.cache
          sudo mount --bind /mnt/.cache .cache
        fi
    - name: devcontainer
      uses: ./.github/workflows/actions/devcontainer
      id: devcontainer
    - name: setup
      run: |
        echo 'EXEC=${{ steps.devcontainer.outputs.exec }}' >> $GITHUB_ENV
    - name: configure
      run: |
        ${{ env.EXEC }} make configure WITH_CLANG=1
    - name: cache ID
      id: cache-id
      run: |
        set -eux
        xla_commit=$(git -C xla log -n 1 --format=%h)
        echo "id=${{ hashFiles( 'xla/*.bzl', 'xla/WORKSPACE', 'xla/.bazel*', 'xla/*.bazelrc') }}" >> $GITHUB_OUTPUT
        echo "id1=$xla_commit" >> $GITHUB_OUTPUT
        echo "id2=${{ hashFiles( 'Makefile', '.github/workflows/build.yml' ) }}" >> $GITHUB_OUTPUT
    - name: Cache Bazel repo
      id: bazel-repo
      uses: actions/cache@v4
      with:
        path: .cache/bazel-repo
        key: bazel-repo-${{ steps.cache-id.outputs.id }}
    - name: Cache Bazel build
      id: bazel-cache
      uses: actions/cache@v4
      with:
        path: .cache/bazel-build
        key: bazel-build-${{ steps.cache-id.outputs.id }}-${{ steps.cache-id.outputs.id1}}-${{ steps.cache-id.outputs.id2}}
        restore-keys: |
          bazel-build-${{ steps.cache-id.outputs.id }}-${{ steps.cache-id.outputs.id1}}
          bazel-build-${{ steps.cache-id.outputs.id }}
    - name: fetch
      run: |
        ${{ env.EXEC }} make fetch
    - name: build
      run: |
        ${{ env.EXEC }} make build
    - name: run
      run: |
        ${{ env.EXEC }} make run
    - name: hlo
      run: |
        ${{ env.EXEC }} make hlo
    - name: disk space
      run: |
        ${{ env.EXEC }} df -h
        df -h
        du -sh .cache/* hlo/
    - name: Upload HLO Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: hlo-artifacts
        path: hlo/
  release:
    runs-on: ubuntu-latest
    needs: [build]
    if: github.ref_type == 'tag'
    permissions:
      contents: write
    steps:
    - uses: actions/download-artifact@v4
      with:
        name: hlo-artifacts
    - name: Release File
      run: |
        file=pjrt-cpu.tar.xz
        (cd hlo;tar -ck --numeric-owner *)| xz -9 -T0 -z > $file
        ls -lh $file
        tar -tvf $file
    - name: upload release
      uses: softprops/action-gh-release@v2
      with:
        files: |
          pjrt-cpu.tar.xz
